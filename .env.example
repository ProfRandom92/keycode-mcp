# =============================================================================
# keycode-mcp Environment Configuration
# =============================================================================

# -----------------------------------------------------------------------------
# Required: Cohere API (for semantic search with embeddings)
# -----------------------------------------------------------------------------
# Get your API key from: https://dashboard.cohere.com/
COHERE_API_KEY=your_cohere_api_key_here

# -----------------------------------------------------------------------------
# Required: GitHub Token (for git operations)
# -----------------------------------------------------------------------------
# Generate at: https://github.com/settings/tokens
# Required scopes:
#   - repo (full control of private repositories)
#   - workflow (update GitHub Action workflows) - optional, only if pushing workflows
# 
# For least-privilege, use fine-grained tokens with:
#   - Contents: Read and write
#   - Pull requests: Read and write
#   - Workflows: Read and write (optional)
GITHUB_TOKEN=your_github_personal_access_token_here

# -----------------------------------------------------------------------------
# Optional: Supabase (for database and KV operations)
# -----------------------------------------------------------------------------
# Find these at: https://app.supabase.com/ > Project Settings > API
SUPABASE_URL=https://your-project.supabase.co

# IMPORTANT: Use RLS-secured roles when possible
# Service key should ONLY be used server-side, never in client code
# Consider using anon key with Row Level Security (RLS) policies instead
SUPABASE_SERVICE_KEY=your_supabase_service_role_key_here

# Alternative: Use anon key with RLS (recommended for most use cases)
# SUPABASE_ANON_KEY=your_supabase_anon_key_here

# -----------------------------------------------------------------------------
# Optional: Cloudflare (for Pages and Workers deployment)
# -----------------------------------------------------------------------------
# Create at: https://dash.cloudflare.com/profile/api-tokens
# Required permissions:
#   - Account > Cloudflare Pages > Edit
#   - Account > Workers Scripts > Edit
#   - Zone > Workers Routes > Edit (if using custom domains)
CLOUDFLARE_API_TOKEN=your_cloudflare_api_token_here
CLOUDFLARE_ACCOUNT_ID=your_cloudflare_account_id_here

# -----------------------------------------------------------------------------
# Security Configuration
# -----------------------------------------------------------------------------

# Dry-run mode: Prevents mutating operations unless confirm:true is provided
# Default: true (safe mode)
MCP_DRY_RUN=true

# Require explicit confirmation for all mutating operations
# Default: true
MCP_REQUIRE_CONFIRM=true

# Human-in-the-loop: Show operation plan before execution
# Default: true
MCP_HUMAN_IN_LOOP=true

# -----------------------------------------------------------------------------
# Capability Flags (Least-Privilege Defaults)
# -----------------------------------------------------------------------------
# Enable/disable specific tool categories
# Default: Only snippets enabled, all others disabled

MCP_CAP_SNIPPETS=true
MCP_CAP_GIT=false
MCP_CAP_SUPABASE=false
MCP_CAP_CLOUDFLARE=false
MCP_CAP_ANDROID=false

# -----------------------------------------------------------------------------
# Whitelist Configuration
# -----------------------------------------------------------------------------
# Comma-separated lists of allowed repos, orgs, and branch patterns
# Empty = allow all (not recommended for production)
# Supports glob patterns: * (any), ? (single char)

# Example: owner/repo,org/another-repo
MCP_WHITELIST_REPOS=

# Example: myorg,trusted-org
MCP_WHITELIST_ORGS=

# Example: sandbox-*,test/*,dev/*
# Default: sandbox-*, test/*, dev/*
MCP_WHITELIST_BRANCHES=sandbox-*,test/*,dev/*

# -----------------------------------------------------------------------------
# Logging Configuration
# -----------------------------------------------------------------------------
# Log level: info, warn, error
MCP_LOG_LEVEL=info

# Enable structured JSON logging
MCP_JSON_LOGS=true

